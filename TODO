next
  "sequenced hashes" where first 9 bytes are timestamp, remaining truncated hash
  try flatmaps instead of std::map
  separate interior and leaf nodes into their own DBs to reduce fragmentation caused by uneven-sized leaf nodes
    * also normalise interior node size
  in-memory backing store
    * way to avoid needing to store stuff in lmdb to validate a proof
  bytesBudget
  refactor test lib
  syncTransport encoding

lib
  ! tests for diff and mergeProof
  ! exporting proof of 0 keys should return a root witness

  - proof suitable for deletion (uses witnessLeafs instead of witnesses where necessary)
    ? WitnessBranch
  - warn when exporting partial tree
  - de-dup trees using diff functionality

  ? changeable hash function
  ? ability to compact tree to ensure nodeIds are sequential
  ? ability to set resource limits on proof sizes when verifying (setMaxProofCmds?)
